include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - '/infra/gitlab/ansible-deploy.yaml'

variables:
  NEXUS_URL: "$NEXUS_URL"
  NEXUS_USER: "$NEXUS_USER"
  NEXUS_PASS: "$NEXUS_PASS"
  COMMIT_TAG: "$CI_COMMIT_SHORT_SHA"
  ANSIBLE_SSH_KEY: "$ANSIBLE_SSH_KEY"

stages:
  - test
  - build
  - infrastructure
  - acceptance

application test:
  stage: test
  image: gradle:jdk17-focal
  variables:
    GIT_DEPTH: "0"
  script:
    - cd backend/application
    - gradle clean test
  artifacts:
    when: always
    reports:
      junit:
        - backend/application/build/test-results/test/**/TEST-*.xml

adapter tests:
  stage: test
  image: gradle:jdk17-focal
  variables:
    GIT_DEPTH: "0"
  script:
    - cd backend/adapters
    - gradle clean test
  artifacts:
    when: always
    reports:
      junit:
        - backend/adapters/build/test-results/test/**/TEST-*.xml

build and push:
  only:
    - master
  stage: build
  script:
    - docker login -u ${NEXUS_USER} -p ${NEXUS_PASS} ${NEXUS_URL}
    - docker compose build
    - docker compose push
    - docker logout ${NEXUS_URL}

deploy to stage:
  only:
    - master
  allow_failure: false
  timeout: 15m
  image: '$NEXUS_URL/ioque/ansible'
  environment: stage
  resource_group: stage
  stage: infrastructure
  variables:
    BACKEND_DB_HOST: "192.168.0.85"
    BACKEND_ENV: "test"
    FRONTEND_API_HOST: "192.168.0.85"
    FRONTEND_API_HTTP_MODE: "http"
  script:
    - mkdir ${CI_PROJECT_DIR}/secret
    - echo "$ANSIBLE_SSH_KEY" > ${CI_PROJECT_DIR}/secret/ansible.key
    - chmod 400 ${CI_PROJECT_DIR}/secret/ansible.key
    - !reference [ .ansible-deploy ]

api tests:
  needs:
    - deploy to stage
  only:
    - master
  stage: acceptance
  image: gradle:jdk17-focal
  environment: stage
  resource_group: stage
  variables:
    API_HOST: "192.168.0.85"
    DATASOURCE_HOST: "192.168.0.47"
    DATASOURCE_PORT: "8081"
  script:
    - cd acceptance
    - gradle clean api-test:test

prepare data:
  needs:
    - api tests
  only:
    - master
  stage: acceptance
  image: gradle:jdk17-focal
  environment: stage
  resource_group: stage
  variables:
    API_HOST: "192.168.0.85"
    DATASOURCE_HOST: "192.168.0.85"
  script:
    - cd acceptance
    - gradle -p ui-seeder bootRun

ui tests:
  needs:
    - prepare data
  only:
    - master
  stage: acceptance
  environment: stage
  resource_group: stage
  image: gradle:jdk17-focal
  services:
    - name: selenium/standalone-firefox:latest
  variables:
    UI_HOST: "192.168.0.85"
    UI_PORT: "192.168.0.85"
  script:
    - cd selenium
    - gradle clean test