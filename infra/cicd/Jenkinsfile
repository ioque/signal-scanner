#!groovy
pipeline {
    agent none
    options {
        skipStagesAfterUnstable()
        skipDefaultCheckout()
    }
    environment {
        IMAGE_TAG = "v$BUILD_NUMBER"
        REACT_APP_API_URL = "http://192.168.0.62:8080"
        NEXUS_URL = "127.0.0.1:8002"
        NEXUS_CREDENTIALS = credentials('nexus-cred')
    }
    stages {
        stage('Git Checkout') {
            agent any
            steps {
                checkout scm
            }
        }

        stage("Unit Test and Build") {
            parallel {
                stage("Backend") {
                    stages {
                        stage('Unit Test') {
                            agent {
                                docker {
                                    image 'openjdk:17-jdk-alpine'
                                }
                            }
                            steps {
                                sh 'cd backend && ./gradlew test'
                                junit '**/application/build/test-results/test/*.xml'
                                junit '**/adapters/build/test-results/test/*.xml'
                            }
                        }
                        stage("Build and Push") {
                            agent any
                            steps {
                                script {
                                    sh "cd backend && docker build . -t ${env.NEXUS_URL}/ioque/backend"
                                    sh "cd infra && cd containers && cd postgres && docker build . -t ${env.NEXUS_URL}/ioque/postgrespro"
                                    sh "docker login ${env.NEXUS_CREDENTIALS} ${env.NEXUS_URL}"
                                    sh "docker push ${env.NEXUS_URL}/ioque/backend"
                                    sh "docker push ${env.NEXUS_URL}/ioque/postgrespro"
                                    sh "docker rmi ${env.NEXUS_URL}/ioque/backend"
                                    sh "docker rmi ${env.NEXUS_URL}/ioque/postgrespro"
                                    sh "docker logout ${env.NEXUS_URL}"
                                }
                            }
                        }
                    }
                }
                stage("Frontend") {
                    stages {
                        stage("Build and Push") {
                            agent any
                            steps {
                                script {
                                    sh "cd frontend && docker build . --build-arg REACT_APP_API_URL=${env.REACT_APP_API_URL} -t ${env.NEXUS_URL}/ioque/frontend"
                                    sh "docker login ${env.NEXUS_CREDENTIALS} ${env.NEXUS_URL}"
                                    sh "docker push ${env.NEXUS_URL}/ioque/frontend"
                                    sh "docker rmi ${env.NEXUS_URL}/ioque/frontend"
                                    sh "docker logout ${env.NEXUS_URL}"
                                }
                            }
                        }
                    }
                }
            }
        }

        stage("API Test") {
            agent any
            steps {
                echo "API Test"
            }
        }

        stage("UI Test") {
            agent any
            steps {
                echo "UI Test"
            }
        }

        stage("Deploy") {
            agent any
            steps {
                echo "DEPLOY"
            }
        }
    }
}