#!groovy
package stage

pipeline {
    agent none
    options {
        skipStagesAfterUnstable()
        skipDefaultCheckout()
    }
    environment {
        NEXUS_URL = "192.168.0.62:8002"
        NEXUS_CREDENTIALS = credentials('nexus-cred')
    }
    stages {
        stage('Git Checkout') {
            agent any
            steps {
                checkout scm
            }
        }

        stage("Unit Test") {
            agent {
                docker {
                    image 'openjdk:17-jdk-alpine'
                }
            }
            steps {
                sh 'cd backend && ./gradlew test'
                junit '**/application/build/test-results/test/*.xml'
                junit '**/adapters/build/test-results/test/*.xml'
            }
        }

        stage("Build and Push Docker Images") {
            parallel {
                stage("Backend") {
                    agent any
                    steps {
                        script {
                            sh "cd backend && docker build . --pull -t ${env.NEXUS_URL}/ioque/backend:${env.GIT_COMMIT} ${env.NEXUS_URL}/ioque/backend:latest"
                            sh "docker login ${env.NEXUS_CREDENTIALS} ${env.NEXUS_URL}"
                            sh "docker push --all-tags ${env.NEXUS_URL}/ioque/backend"
                            sh "docker rmi ${env.NEXUS_URL}/ioque/backend:latest"
                            sh "docker rmi ${env.NEXUS_URL}/ioque/backend:${env.GIT_COMMIT}"
                            sh "docker logout ${env.NEXUS_URL}"
                        }
                    }
                }
                stage("Postgres") {
                    agent any
                    steps {
                        script {
                            sh "cd infra && cd containers && cd postgres && docker build . --pull -t ${env.NEXUS_URL}/ioque/postgrespro:${env.GIT_COMMIT} ${env.NEXUS_URL}/ioque/postgrespro:latest"
                            sh "docker login ${env.NEXUS_CREDENTIALS} ${env.NEXUS_URL}"
                            sh "docker push --all-tags ${env.NEXUS_URL}/ioque/postgrespro"
                            sh "docker rmi ${env.NEXUS_URL}/ioque/postgrespro:latest"
                            sh "docker rmi ${env.NEXUS_URL}/ioque/postgrespro:${env.GIT_COMMIT}"
                            sh "docker logout ${env.NEXUS_URL}"
                        }
                    }
                }
                stage("Frontend") {
                    agent any
                    steps {
                        script {
                            sh "cd frontend && docker build . --pull -t ${env.NEXUS_URL}/ioque/frontend:${env.GIT_COMMIT} ${env.NEXUS_URL}/ioque/frontend:latest"
                            sh "docker login ${env.NEXUS_CREDENTIALS} ${env.NEXUS_URL}"
                            sh "docker push --all-tags ${env.NEXUS_URL}/ioque/frontend"
                            sh "docker rmi ${env.NEXUS_URL}/ioque/frontend:latest"
                            sh "docker rmi ${env.NEXUS_URL}/ioque/frontend:${env.GIT_COMMIT}"
                            sh "docker logout ${env.NEXUS_URL}"
                        }
                    }
                }
            }
        }

        stage("API Test") {
            agent any
            steps {
                echo "API Test"
            }
        }

        stage("UI Test") {
            agent any
            steps {
                echo "UI Test"
            }
        }

        stage("Deploy") {
            agent any
            steps {
                echo "DEPLOY"
            }
        }
    }
}