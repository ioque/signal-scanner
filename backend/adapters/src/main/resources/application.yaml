spring:
  application:
    name: signal-scanner
  jpa:
    hibernate.ddl-auto: none
    generate-ddl: false
    properties:
      hibernate:
        jdbc:
          batch_size: 50
          fetch_size: 50
        order_inserts: true
        order_updates: true
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/postgres?reWriteBatchedInserts=true
    username: postgres
    password:
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: "ru.ioque.investfund.*"
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      group-id: ${spring.application.name}
      enable-auto-commit: false
      auto-offset-reset: latest
      properties:
        max.poll.records: 100
        fetch.max.wait.ms: 50
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "ru.ioque.investfund.*"
  main:
    banner-mode: off

logging-config:
  level: ${ROOT_LOG_LEVEL:INFO}
  kafka_url: ${KAFKA_HOST:localhost}:9092

telegram-bot:
  token: ${TELEGRAM_BOT_TOKEN}